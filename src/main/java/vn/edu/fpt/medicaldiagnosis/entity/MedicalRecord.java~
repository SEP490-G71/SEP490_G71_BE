package vn.edu.fpt.medicaldiagnosis.entity;


import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.hibernate.annotations.Where;
import vn.edu.fpt.medicaldiagnosis.enums.MedicalRecordStatus;

@Entity
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Where(clause = "deleted_at IS NULL")
@Table(name = "medical_records")
public class MedicalRecord extends AuditableEntity {
    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private String id;

    @Column(name = "medical_record_code", unique = true, nullable = false)
    private String medicalRecordCode;

    @ManyToOne
    @JoinColumn(name = "patient_id", nullable = false)
    private Patient patient;

    @OneToOne
    @JoinColumn(name = "visit_id", nullable = false)
    private QueuePatients visit;

    @Column(name = "temperature") // nhiệt độ (°C)
    private Double temperature;

    @Column(name = "respiratory_rate") // nhịp thở (lần/phút)
    private Integer respiratoryRate;

    @Column(name = "blood_pressure") // huyết áp (chuỗi: "120/80")
    private String bloodPressure;

    @Column(name = "heart_rate") // mạch (lần/phút)
    private Integer heartRate;

    @Column(name = "height_cm") // chiều cao (cm)
    private Double heightCm;

    @Column(name = "weight_kg") // cân nặng (kg)
    private Double weightKg;

    @Column(name = "bmi") // chỉ số BMI
    private Double bmi;

    @Column(name = "spo2") // SpO2 (%)
    private Integer spo2;

    @Column(name = "notes", columnDefinition = "TEXT") // ghi chú thêm
    private String notes;

    @Column(name = "diagnosis_text")
    private String diagnosisText;

    @OneToOne
    @JoinColumn(name = "created_by", nullable = false)
    private Staff createdBy;

    private String summary;

    @Enumerated(EnumType.STRING)
    @Column(name = "status", nullable = false)
    private MedicalRecordStatus status;
}
